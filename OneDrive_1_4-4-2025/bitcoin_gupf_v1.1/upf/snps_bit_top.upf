################################################################################
##
##  This confidential and proprietary software may be used only
##  as authorized by a licensing agreement from Synopsys Inc.
##  In the event of publication, the following notice is applicable:
##
##  (C) COPYRIGHT 1994 - 2017 SYNOPSYS INC.
##  ALL RIGHTS RESERVED
##
##  The entire notice above must be reproduced on all authorized copies.
##
##  AUTHOR:    Godwin Maben
##
##  FILE:      snps_bit_top.upf
##
##  VERSION:   1.0
##
################################################################################

# UPF DIRECTORY
set UPF_DIR ../../upf

# UPF 2.1 FOR PST
set_design_attributes -elements {.} -attribute enable_state_propagation_in_add_power_state TRUE

# SUPPLY SETS (EXPLICIT)
create_supply_set SS
create_supply_set SSL
create_supply_set SSL_SIPO_SLICE_SW
create_supply_set SSL_PISO_SLICE_SW
create_supply_set SS_MEM_SW

# POWER DOMAINS
create_power_domain TOP -supply {primary SS} -include_scope
create_power_domain PD_SIPO_SLICE -supply {primary SSL_SIPO_SLICE_SW} -elements {sipo_slice_first sipo_slice_last}
create_power_domain PD_PISO_SLICE -supply {primary SSL_PISO_SLICE_SW} -elements {piso_slice_first piso_slice_last}

# FOR DC, USE BOTTOM UP FLOW, SO DON'T READ IN LOWER LEVEL UPF
if { $synopsys_program_name != "dc_shell"} { 
  for {set i 0} {$i < 32} {incr i} {
    load_upf -scope slice_${i} $UPF_DIR/snps_bit_slice.upf
  }
}

# POWER SWITCHES
create_power_switch -domain PD_SIPO_SLICE \
                    -output_supply_port {out SSL_SIPO_SLICE_SW.power} \
                    -input_supply_port {in SSL.power} \
                    -control_port {shut_down_signal_SIPO_SLICE shut_down_signals[0] } \
                    -on_state {TOP_ON in !shut_down_signal_SIPO_SLICE} \
                    -ack_port {ack_signal_SIPO_SLICE PG_ack_signals[2] {shut_down_signal_SIPO_SLICE}} -ack_delay {ack_signal_SIPO_SLICE 10} SW_SIPO_SLICE

create_power_switch -domain PD_PISO_SLICE \
                    -output_supply_port {out SSL_PISO_SLICE_SW.power} \
                    -input_supply_port {in SSL.power} \
                    -control_port {shut_down_signal_PISO_SLICE shut_down_signals[1] } \
                    -on_state {TOP_ON in !shut_down_signal_PISO_SLICE} \
                    -ack_port {ack_signal_PISO_SLICE PG_ack_signals[3] {shut_down_signal_PISO_SLICE}} -ack_delay {ack_signal_PISO_SLICE 10} SW_PISO_SLICE

map_power_switch -domain PD_SIPO_SLICE -lib_cells {HEAD2X*} SW_SIPO_SLICE
map_power_switch -domain PD_PISO_SLICE -lib_cells {HEAD2X*} SW_PISO_SLICE

# RETENTION
set_retention -domain PD_SIPO_SLICE -retention_supply_set SSL RET_SIPO_SLICE
set_retention_control -domain PD_SIPO_SLICE -save_signal {retention_signals[0] high} -restore_signal {retention_signals[0] low} RET_SIPO_SLICE

set_retention -domain PD_PISO_SLICE -retention_supply_set SSL RET_PISO_SLICE
set_retention_control -domain PD_PISO_SLICE -save_signal {retention_signals[1] high} -restore_signal {retention_signals[1] low} RET_PISO_SLICE

map_retention_cell -domain PD_SIPO_SLICE -lib_cells {RSDFFAR*} RET_SIPO_SLICE
map_retention_cell -domain PD_PISO_SLICE -lib_cells {RSDFFAR*} RET_PISO_SLICE

# ISOLATION
set_isolation -domain PD_SIPO_SLICE -sink SS -isolation_supply_set SS -clamp_value 1 ISO_SIPO_OUT -name_suffix ISO_SIPO_OUT
set_isolation_control -domain PD_SIPO_SLICE -isolation_sense high -isolation_signal isolation_signals[0] -location parent ISO_SIPO_OUT

set_isolation -domain PD_PISO_SLICE -sink SS -isolation_supply_set SS -clamp_value 1 ISO_PISO_OUT -name_suffix ISO_PISO_OUT
set_isolation_control -domain PD_PISO_SLICE -isolation_sense high -isolation_signal isolation_signals[1] -location parent ISO_PISO_OUT

set_isolation -domain PD_SIPO_SLICE -source SSL_PISO_SLICE_SW -sink SSL_SIPO_SLICE_SW -clamp_value 1 -isolation_supply_set SSL ISO_PPP
set_isolation_control -domain PD_SIPO_SLICE -isolation_sense high -isolation_signal isolation_signals[0] -location parent ISO_PPP

# POWER STATE TABLE (UPF 2.1)
add_power_state -supply SS                -state SS_ON              {-supply_expr {power ==  {FULL_ON 0.85} }}
add_power_state -supply SS                -state GND                {-supply_expr {ground == {FULL_ON 0.0} }} 
add_power_state -supply SSL               -state SSL_ON             {-supply_expr {power ==  {FULL_ON 0.78} }}
add_power_state -supply SSL_SIPO_SLICE_SW -state SSL_SIPO_SLICE_ON  {-supply_expr {power ==  {FULL_ON 0.78} }}
add_power_state -supply SSL_SIPO_SLICE_SW -state SSL_SIPO_SLICE_OFF {-supply_expr {power ==  {OFF}} -simstate CORRUPT} 
add_power_state -supply SSL_PISO_SLICE_SW -state SSL_PISO_SLICE_ON  {-supply_expr {power ==  {FULL_ON 0.78} }}
add_power_state -supply SSL_PISO_SLICE_SW -state SSL_PISO_SLICE_OFF {-supply_expr {power ==  {OFF}} -simstate CORRUPT} 
add_power_state -supply SS_MEM_SW         -state MEM_ON             {-supply_expr {power ==  {FULL_ON 0.85} }}
add_power_state -supply SS_MEM_SW         -state MEM_OFF            {-supply_expr {power ==  {OFF}} -simstate CORRUPT} 

# REFINE PG
load_upf $UPF_DIR/refine_bt.upf

add_port_state  sipo_sw_out -state {SSL_SIPO_SLICE_ON  0.78} 
add_port_state  sipo_sw_out -state {SSL_SIPO_SLICE_OFF off} 
add_port_state  piso_sw_out -state {SSL_PISO_SLICE_ON  0.78} 
add_port_state  piso_sw_out -state {SSL_PISO_SLICE_OFF off} 

create_pst BIT_TOP_PST -supplies                            {SS.power SSL.power SSL_SIPO_SLICE_SW.power SSL_PISO_SLICE_SW.power SS_MEM_SW.power SS.ground}
add_pst_state ALL_ON              -pst BIT_TOP_PST -state   {SS_ON    SSL_ON    SSL_SIPO_SLICE_ON       SSL_PISO_SLICE_ON       MEM_ON          GND}
add_pst_state PISO_SLICE_ON       -pst BIT_TOP_PST -state   {SS_ON    SSL_ON    SSL_SIPO_SLICE_OFF      SSL_PISO_SLICE_ON       MEM_ON          GND}
add_pst_state SIPO_SLICE_ON       -pst BIT_TOP_PST -state   {SS_ON    SSL_ON    SSL_SIPO_SLICE_ON       SSL_PISO_SLICE_OFF      MEM_ON          GND}
add_pst_state SIPO_PISO_SLICE_OFF -pst BIT_TOP_PST -state   {SS_ON    SSL_ON    SSL_SIPO_SLICE_OFF      SSL_PISO_SLICE_OFF      MEM_ON          GND}

# PORT ATTRIBUTES
set_port_attributes -ports retention_signals -driver_supply SSL
set_port_attributes -ports isolation_signals -driver_supply SSL
set_port_attributes -ports shut_down_signals  -driver_supply SSL
set_port_attributes -ports lclk  -driver_supply SSL
set_port_attributes -ports hclk  -driver_supply SS
set_port_attributes -ports data_valid -driver_supply SSL
